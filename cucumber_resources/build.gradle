plugins {
  //id 'com.github.johnrengelman.plugin-shadow' version '2.0.3'
  //id 'java'
  id 'groovy'
  id 'application'
  id 'maven'
}

//build stuff
sourceCompatibility = 1.8
targetCompatibility = 1.8

def cucumberVersion = "1.2.4"

group = 'com.galatea'
// artifactId is taken by default, from folder name
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
}


configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}




task cucumber() {
    dependsOn assemble
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime
            args = ['--plugin', 'pretty', '--glue', 'src/test/groovy', 'src/test/resources']

        }
    }
}
 

 mainClassName = "cucumber.api.cli.Main"



task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

build.dependsOn testJar

dependencies {
    // Groovy library for groovy building!
    compile 'org.codehaus.groovy:groovy-all:2.4.3'
    compile 'commons-lang:commons-lang:2.3'
    testCompile project(":spring-petclinic")
    //compile 'com.github.spring-projects:spring-petclinic:master-SNAPSHOT'

    /*
   In order to work around a really flagrant bug ( http://issues.gradle.org/browse/GRADLE-732 )
   You have to create a configuration that includes the jar.archivePath (the jar.archivePath is created by the java plugin)
   and give it the same name as the cucumberRuntime configuration, or name it something different and have the cucumberRuntime
   configuration extend from it as well.

    Still a bug in gradle 2.4, despite their saying that they would fix it before 1.0

   VERY ANNOYING BUG
    */
    cucumberRuntime files("${jar.archivePath}")

    testCompile 'junit:junit:4.11'
    //testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'3.12.0'
    testCompile group: "org.seleniumhq.selenium", name: 'selenium-htmlunit-driver', version: '2.52.0'
    testCompile "info.cukes:cucumber-junit:$cucumberVersion"
    testCompile "info.cukes:cucumber-groovy:$cucumberVersion"
}

// task testJar(type: com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
//   classifier = 'tests'
//   from sourceSets.test.output
//   //exclude(project(":spring-petclinic"))
//   //configurations = [project.configurations.cucumberRuntime]
  
//   //args = ['--plugin', 'pretty', '--glue', 'src/test/groovy', 'src/test/resources']
// }


//Ensure the cucumber tests are executed as part of the build. Makes for a very pretty output.
// build.dependsOn cucumber 




